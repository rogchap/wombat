// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.17.3
// source: foobar.proto

package server

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Baz int32

const (
	Baz_UNKNOWN Baz = 0
	Baz_FOO     Baz = 1
	Baz_BAR     Baz = 2
	Baz_BAZ     Baz = 3
)

// Enum value maps for Baz.
var (
	Baz_name = map[int32]string{
		0: "UNKNOWN",
		1: "FOO",
		2: "BAR",
		3: "BAZ",
	}
	Baz_value = map[string]int32{
		"UNKNOWN": 0,
		"FOO":     1,
		"BAR":     2,
		"BAZ":     3,
	}
)

func (x Baz) Enum() *Baz {
	p := new(Baz)
	*p = x
	return p
}

func (x Baz) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Baz) Descriptor() protoreflect.EnumDescriptor {
	return file_foobar_proto_enumTypes[0].Descriptor()
}

func (Baz) Type() protoreflect.EnumType {
	return &file_foobar_proto_enumTypes[0]
}

func (x Baz) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Baz.Descriptor instead.
func (Baz) EnumDescriptor() ([]byte, []int) {
	return file_foobar_proto_rawDescGZIP(), []int{0}
}

type Bar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Names []*Bar_Nested `protobuf:"bytes,3,rep,name=names,proto3" json:"names,omitempty"`
}

func (x *Bar) Reset() {
	*x = Bar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foobar_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bar) ProtoMessage() {}

func (x *Bar) ProtoReflect() protoreflect.Message {
	mi := &file_foobar_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bar.ProtoReflect.Descriptor instead.
func (*Bar) Descriptor() ([]byte, []int) {
	return file_foobar_proto_rawDescGZIP(), []int{0}
}

func (x *Bar) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Bar) GetNames() []*Bar_Nested {
	if x != nil {
		return x.Names
	}
	return nil
}

type FooRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeDouble     float64           `protobuf:"fixed64,1,opt,name=type_double,json=typeDouble,proto3" json:"type_double,omitempty"`
	TypeFloat      float32           `protobuf:"fixed32,2,opt,name=type_float,json=typeFloat,proto3" json:"type_float,omitempty"`
	TypeInt64      int64             `protobuf:"varint,3,opt,name=type_int64,json=typeInt64,proto3" json:"type_int64,omitempty"`
	TypeUint64     uint64            `protobuf:"varint,4,opt,name=type_uint64,json=typeUint64,proto3" json:"type_uint64,omitempty"`
	TypeInt32      int32             `protobuf:"varint,5,opt,name=type_int32,json=typeInt32,proto3" json:"type_int32,omitempty"`
	TypeFixed64    uint64            `protobuf:"fixed64,6,opt,name=type_fixed64,json=typeFixed64,proto3" json:"type_fixed64,omitempty"`
	TypeFixed32    uint32            `protobuf:"fixed32,7,opt,name=type_fixed32,json=typeFixed32,proto3" json:"type_fixed32,omitempty"`
	TypeBool       bool              `protobuf:"varint,8,opt,name=type_bool,json=typeBool,proto3" json:"type_bool,omitempty"`
	TypeString     string            `protobuf:"bytes,9,opt,name=type_string,json=typeString,proto3" json:"type_string,omitempty"`
	TypeMessage    *Bar              `protobuf:"bytes,10,opt,name=type_message,json=typeMessage,proto3" json:"type_message,omitempty"`
	TypeBytes      []byte            `protobuf:"bytes,11,opt,name=type_bytes,json=typeBytes,proto3" json:"type_bytes,omitempty"`
	TypeUint32     uint32            `protobuf:"varint,12,opt,name=type_uint32,json=typeUint32,proto3" json:"type_uint32,omitempty"`
	TypeEnum       Baz               `protobuf:"varint,13,opt,name=type_enum,json=typeEnum,proto3,enum=wombat.v1.Baz" json:"type_enum,omitempty"`
	TypeSfixed32   int32             `protobuf:"fixed32,14,opt,name=type_sfixed32,json=typeSfixed32,proto3" json:"type_sfixed32,omitempty"`
	TypeSfixed64   int64             `protobuf:"fixed64,15,opt,name=type_sfixed64,json=typeSfixed64,proto3" json:"type_sfixed64,omitempty"`
	TypeSint32     int32             `protobuf:"zigzag32,16,opt,name=type_sint32,json=typeSint32,proto3" json:"type_sint32,omitempty"`
	TypeSint64     int64             `protobuf:"zigzag64,17,opt,name=type_sint64,json=typeSint64,proto3" json:"type_sint64,omitempty"`
	TypeStringMap  map[string]string `protobuf:"bytes,18,rep,name=type_string_map,json=typeStringMap,proto3" json:"type_string_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TypeComplexMap map[string]*Bar   `protobuf:"bytes,19,rep,name=type_complex_map,json=typeComplexMap,proto3" json:"type_complex_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *FooRequest) Reset() {
	*x = FooRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foobar_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FooRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FooRequest) ProtoMessage() {}

func (x *FooRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foobar_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FooRequest.ProtoReflect.Descriptor instead.
func (*FooRequest) Descriptor() ([]byte, []int) {
	return file_foobar_proto_rawDescGZIP(), []int{1}
}

func (x *FooRequest) GetTypeDouble() float64 {
	if x != nil {
		return x.TypeDouble
	}
	return 0
}

func (x *FooRequest) GetTypeFloat() float32 {
	if x != nil {
		return x.TypeFloat
	}
	return 0
}

func (x *FooRequest) GetTypeInt64() int64 {
	if x != nil {
		return x.TypeInt64
	}
	return 0
}

func (x *FooRequest) GetTypeUint64() uint64 {
	if x != nil {
		return x.TypeUint64
	}
	return 0
}

func (x *FooRequest) GetTypeInt32() int32 {
	if x != nil {
		return x.TypeInt32
	}
	return 0
}

func (x *FooRequest) GetTypeFixed64() uint64 {
	if x != nil {
		return x.TypeFixed64
	}
	return 0
}

func (x *FooRequest) GetTypeFixed32() uint32 {
	if x != nil {
		return x.TypeFixed32
	}
	return 0
}

func (x *FooRequest) GetTypeBool() bool {
	if x != nil {
		return x.TypeBool
	}
	return false
}

func (x *FooRequest) GetTypeString() string {
	if x != nil {
		return x.TypeString
	}
	return ""
}

func (x *FooRequest) GetTypeMessage() *Bar {
	if x != nil {
		return x.TypeMessage
	}
	return nil
}

func (x *FooRequest) GetTypeBytes() []byte {
	if x != nil {
		return x.TypeBytes
	}
	return nil
}

func (x *FooRequest) GetTypeUint32() uint32 {
	if x != nil {
		return x.TypeUint32
	}
	return 0
}

func (x *FooRequest) GetTypeEnum() Baz {
	if x != nil {
		return x.TypeEnum
	}
	return Baz_UNKNOWN
}

func (x *FooRequest) GetTypeSfixed32() int32 {
	if x != nil {
		return x.TypeSfixed32
	}
	return 0
}

func (x *FooRequest) GetTypeSfixed64() int64 {
	if x != nil {
		return x.TypeSfixed64
	}
	return 0
}

func (x *FooRequest) GetTypeSint32() int32 {
	if x != nil {
		return x.TypeSint32
	}
	return 0
}

func (x *FooRequest) GetTypeSint64() int64 {
	if x != nil {
		return x.TypeSint64
	}
	return 0
}

func (x *FooRequest) GetTypeStringMap() map[string]string {
	if x != nil {
		return x.TypeStringMap
	}
	return nil
}

func (x *FooRequest) GetTypeComplexMap() map[string]*Bar {
	if x != nil {
		return x.TypeComplexMap
	}
	return nil
}

type FooResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FooResponse) Reset() {
	*x = FooResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foobar_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FooResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FooResponse) ProtoMessage() {}

func (x *FooResponse) ProtoReflect() protoreflect.Message {
	mi := &file_foobar_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FooResponse.ProtoReflect.Descriptor instead.
func (*FooResponse) Descriptor() ([]byte, []int) {
	return file_foobar_proto_rawDescGZIP(), []int{2}
}

type BarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeRepeatedString  []string  `protobuf:"bytes,1,rep,name=type_repeated_string,json=typeRepeatedString,proto3" json:"type_repeated_string,omitempty"`
	TypeRepeatedFloat   []float32 `protobuf:"fixed32,2,rep,packed,name=type_repeated_float,json=typeRepeatedFloat,proto3" json:"type_repeated_float,omitempty"`
	TypeRepeatedBool    []bool    `protobuf:"varint,3,rep,packed,name=type_repeated_bool,json=typeRepeatedBool,proto3" json:"type_repeated_bool,omitempty"`
	TypeRepeatedEnum    []Baz     `protobuf:"varint,4,rep,packed,name=type_repeated_enum,json=typeRepeatedEnum,proto3,enum=wombat.v1.Baz" json:"type_repeated_enum,omitempty"`
	TypeRepeatedBytes   [][]byte  `protobuf:"bytes,5,rep,name=type_repeated_bytes,json=typeRepeatedBytes,proto3" json:"type_repeated_bytes,omitempty"`
	TypeRepeatedMessage []*Bar    `protobuf:"bytes,6,rep,name=type_repeated_message,json=typeRepeatedMessage,proto3" json:"type_repeated_message,omitempty"`
	Uint32Repeated      []uint32  `protobuf:"varint,7,rep,packed,name=uint32repeated,proto3" json:"uint32repeated,omitempty"`
}

func (x *BarRequest) Reset() {
	*x = BarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foobar_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BarRequest) ProtoMessage() {}

func (x *BarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foobar_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BarRequest.ProtoReflect.Descriptor instead.
func (*BarRequest) Descriptor() ([]byte, []int) {
	return file_foobar_proto_rawDescGZIP(), []int{3}
}

func (x *BarRequest) GetTypeRepeatedString() []string {
	if x != nil {
		return x.TypeRepeatedString
	}
	return nil
}

func (x *BarRequest) GetTypeRepeatedFloat() []float32 {
	if x != nil {
		return x.TypeRepeatedFloat
	}
	return nil
}

func (x *BarRequest) GetTypeRepeatedBool() []bool {
	if x != nil {
		return x.TypeRepeatedBool
	}
	return nil
}

func (x *BarRequest) GetTypeRepeatedEnum() []Baz {
	if x != nil {
		return x.TypeRepeatedEnum
	}
	return nil
}

func (x *BarRequest) GetTypeRepeatedBytes() [][]byte {
	if x != nil {
		return x.TypeRepeatedBytes
	}
	return nil
}

func (x *BarRequest) GetTypeRepeatedMessage() []*Bar {
	if x != nil {
		return x.TypeRepeatedMessage
	}
	return nil
}

func (x *BarRequest) GetUint32Repeated() []uint32 {
	if x != nil {
		return x.Uint32Repeated
	}
	return nil
}

type BarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BarResponse) Reset() {
	*x = BarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foobar_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BarResponse) ProtoMessage() {}

func (x *BarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_foobar_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BarResponse.ProtoReflect.Descriptor instead.
func (*BarResponse) Descriptor() ([]byte, []int) {
	return file_foobar_proto_rawDescGZIP(), []int{4}
}

type BazRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//	*BazRequest_Foo
	//	*BazRequest_Bar
	//	*BazRequest_Baz
	Request isBazRequest_Request `protobuf_oneof:"request"`
}

func (x *BazRequest) Reset() {
	*x = BazRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foobar_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BazRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BazRequest) ProtoMessage() {}

func (x *BazRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foobar_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BazRequest.ProtoReflect.Descriptor instead.
func (*BazRequest) Descriptor() ([]byte, []int) {
	return file_foobar_proto_rawDescGZIP(), []int{5}
}

func (m *BazRequest) GetRequest() isBazRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *BazRequest) GetFoo() *FooRequest {
	if x, ok := x.GetRequest().(*BazRequest_Foo); ok {
		return x.Foo
	}
	return nil
}

func (x *BazRequest) GetBar() *BarRequest {
	if x, ok := x.GetRequest().(*BazRequest_Bar); ok {
		return x.Bar
	}
	return nil
}

func (x *BazRequest) GetBaz() string {
	if x, ok := x.GetRequest().(*BazRequest_Baz); ok {
		return x.Baz
	}
	return ""
}

type isBazRequest_Request interface {
	isBazRequest_Request()
}

type BazRequest_Foo struct {
	Foo *FooRequest `protobuf:"bytes,1,opt,name=foo,proto3,oneof"`
}

type BazRequest_Bar struct {
	Bar *BarRequest `protobuf:"bytes,2,opt,name=bar,proto3,oneof"`
}

type BazRequest_Baz struct {
	Baz string `protobuf:"bytes,3,opt,name=baz,proto3,oneof"`
}

func (*BazRequest_Foo) isBazRequest_Request() {}

func (*BazRequest_Bar) isBazRequest_Request() {}

func (*BazRequest_Baz) isBazRequest_Request() {}

type BazResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BazResponse) Reset() {
	*x = BazResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foobar_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BazResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BazResponse) ProtoMessage() {}

func (x *BazResponse) ProtoReflect() protoreflect.Message {
	mi := &file_foobar_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BazResponse.ProtoReflect.Descriptor instead.
func (*BazResponse) Descriptor() ([]byte, []int) {
	return file_foobar_proto_rawDescGZIP(), []int{6}
}

type AFooRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapStringString map[string]string     `protobuf:"bytes,1,rep,name=map_string_string,json=mapStringString,proto3" json:"map_string_string,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MapInt32Bytes   map[int32][]byte      `protobuf:"bytes,2,rep,name=map_int32_bytes,json=mapInt32Bytes,proto3" json:"map_int32_bytes,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MapStringEnum   map[string]Baz        `protobuf:"bytes,3,rep,name=map_string_enum,json=mapStringEnum,proto3" json:"map_string_enum,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=wombat.v1.Baz"`
	MapStringBool   map[string]bool       `protobuf:"bytes,4,rep,name=map_string_bool,json=mapStringBool,proto3" json:"map_string_bool,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	MapInt32Message map[int32]*BazRequest `protobuf:"bytes,5,rep,name=map_int32_message,json=mapInt32Message,proto3" json:"map_int32_message,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AFooRequest) Reset() {
	*x = AFooRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foobar_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AFooRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AFooRequest) ProtoMessage() {}

func (x *AFooRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foobar_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AFooRequest.ProtoReflect.Descriptor instead.
func (*AFooRequest) Descriptor() ([]byte, []int) {
	return file_foobar_proto_rawDescGZIP(), []int{7}
}

func (x *AFooRequest) GetMapStringString() map[string]string {
	if x != nil {
		return x.MapStringString
	}
	return nil
}

func (x *AFooRequest) GetMapInt32Bytes() map[int32][]byte {
	if x != nil {
		return x.MapInt32Bytes
	}
	return nil
}

func (x *AFooRequest) GetMapStringEnum() map[string]Baz {
	if x != nil {
		return x.MapStringEnum
	}
	return nil
}

func (x *AFooRequest) GetMapStringBool() map[string]bool {
	if x != nil {
		return x.MapStringBool
	}
	return nil
}

func (x *AFooRequest) GetMapInt32Message() map[int32]*BazRequest {
	if x != nil {
		return x.MapInt32Message
	}
	return nil
}

type AFooResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AFooResponse) Reset() {
	*x = AFooResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foobar_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AFooResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AFooResponse) ProtoMessage() {}

func (x *AFooResponse) ProtoReflect() protoreflect.Message {
	mi := &file_foobar_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AFooResponse.ProtoReflect.Descriptor instead.
func (*AFooResponse) Descriptor() ([]byte, []int) {
	return file_foobar_proto_rawDescGZIP(), []int{8}
}

type EmptyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foobar_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foobar_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_foobar_proto_rawDescGZIP(), []int{9}
}

type EmptyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foobar_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_foobar_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_foobar_proto_rawDescGZIP(), []int{10}
}

type WellKnownRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp   *timestamppb.Timestamp  `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Duration    *durationpb.Duration    `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	DoubleValue *wrapperspb.DoubleValue `protobuf:"bytes,3,opt,name=double_value,json=doubleValue,proto3" json:"double_value,omitempty"`
	FloatValue  *wrapperspb.FloatValue  `protobuf:"bytes,4,opt,name=float_value,json=floatValue,proto3" json:"float_value,omitempty"`
	Int64Value  *wrapperspb.Int64Value  `protobuf:"bytes,5,opt,name=int64_value,json=int64Value,proto3" json:"int64_value,omitempty"`
	Uint64Value *wrapperspb.UInt64Value `protobuf:"bytes,6,opt,name=uint64_value,json=uint64Value,proto3" json:"uint64_value,omitempty"`
	Int32Value  *wrapperspb.Int32Value  `protobuf:"bytes,7,opt,name=int32_value,json=int32Value,proto3" json:"int32_value,omitempty"`
	Uint32Value *wrapperspb.UInt32Value `protobuf:"bytes,8,opt,name=uint32_value,json=uint32Value,proto3" json:"uint32_value,omitempty"`
	BoolValue   *wrapperspb.BoolValue   `protobuf:"bytes,9,opt,name=bool_value,json=boolValue,proto3" json:"bool_value,omitempty"`
	StringValue *wrapperspb.StringValue `protobuf:"bytes,10,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
	BytesValue  *wrapperspb.BytesValue  `protobuf:"bytes,11,opt,name=bytes_value,json=bytesValue,proto3" json:"bytes_value,omitempty"`
	StructValue *structpb.Struct        `protobuf:"bytes,12,opt,name=struct_value,json=structValue,proto3" json:"struct_value,omitempty"`
}

func (x *WellKnownRequest) Reset() {
	*x = WellKnownRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foobar_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WellKnownRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WellKnownRequest) ProtoMessage() {}

func (x *WellKnownRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foobar_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WellKnownRequest.ProtoReflect.Descriptor instead.
func (*WellKnownRequest) Descriptor() ([]byte, []int) {
	return file_foobar_proto_rawDescGZIP(), []int{11}
}

func (x *WellKnownRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *WellKnownRequest) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *WellKnownRequest) GetDoubleValue() *wrapperspb.DoubleValue {
	if x != nil {
		return x.DoubleValue
	}
	return nil
}

func (x *WellKnownRequest) GetFloatValue() *wrapperspb.FloatValue {
	if x != nil {
		return x.FloatValue
	}
	return nil
}

func (x *WellKnownRequest) GetInt64Value() *wrapperspb.Int64Value {
	if x != nil {
		return x.Int64Value
	}
	return nil
}

func (x *WellKnownRequest) GetUint64Value() *wrapperspb.UInt64Value {
	if x != nil {
		return x.Uint64Value
	}
	return nil
}

func (x *WellKnownRequest) GetInt32Value() *wrapperspb.Int32Value {
	if x != nil {
		return x.Int32Value
	}
	return nil
}

func (x *WellKnownRequest) GetUint32Value() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Uint32Value
	}
	return nil
}

func (x *WellKnownRequest) GetBoolValue() *wrapperspb.BoolValue {
	if x != nil {
		return x.BoolValue
	}
	return nil
}

func (x *WellKnownRequest) GetStringValue() *wrapperspb.StringValue {
	if x != nil {
		return x.StringValue
	}
	return nil
}

func (x *WellKnownRequest) GetBytesValue() *wrapperspb.BytesValue {
	if x != nil {
		return x.BytesValue
	}
	return nil
}

func (x *WellKnownRequest) GetStructValue() *structpb.Struct {
	if x != nil {
		return x.StructValue
	}
	return nil
}

type WellKnownResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WellKnownResponse) Reset() {
	*x = WellKnownResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foobar_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WellKnownResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WellKnownResponse) ProtoMessage() {}

func (x *WellKnownResponse) ProtoReflect() protoreflect.Message {
	mi := &file_foobar_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WellKnownResponse.ProtoReflect.Descriptor instead.
func (*WellKnownResponse) Descriptor() ([]byte, []int) {
	return file_foobar_proto_rawDescGZIP(), []int{12}
}

type SingleOneofRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Foobar:
	//	*SingleOneofRequest_Baz
	Foobar isSingleOneofRequest_Foobar `protobuf_oneof:"foobar"`
}

func (x *SingleOneofRequest) Reset() {
	*x = SingleOneofRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foobar_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleOneofRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleOneofRequest) ProtoMessage() {}

func (x *SingleOneofRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foobar_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleOneofRequest.ProtoReflect.Descriptor instead.
func (*SingleOneofRequest) Descriptor() ([]byte, []int) {
	return file_foobar_proto_rawDescGZIP(), []int{13}
}

func (m *SingleOneofRequest) GetFoobar() isSingleOneofRequest_Foobar {
	if m != nil {
		return m.Foobar
	}
	return nil
}

func (x *SingleOneofRequest) GetBaz() *WellKnownResponse {
	if x, ok := x.GetFoobar().(*SingleOneofRequest_Baz); ok {
		return x.Baz
	}
	return nil
}

type isSingleOneofRequest_Foobar interface {
	isSingleOneofRequest_Foobar()
}

type SingleOneofRequest_Baz struct {
	Baz *WellKnownResponse `protobuf:"bytes,1,opt,name=baz,proto3,oneof"`
}

func (*SingleOneofRequest_Baz) isSingleOneofRequest_Foobar() {}

type SingleOneofResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SingleOneofResponse) Reset() {
	*x = SingleOneofResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foobar_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleOneofResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleOneofResponse) ProtoMessage() {}

func (x *SingleOneofResponse) ProtoReflect() protoreflect.Message {
	mi := &file_foobar_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleOneofResponse.ProtoReflect.Descriptor instead.
func (*SingleOneofResponse) Descriptor() ([]byte, []int) {
	return file_foobar_proto_rawDescGZIP(), []int{14}
}

type Bar_Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IsNested bool   `protobuf:"varint,2,opt,name=is_nested,json=isNested,proto3" json:"is_nested,omitempty"`
}

func (x *Bar_Nested) Reset() {
	*x = Bar_Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foobar_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bar_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bar_Nested) ProtoMessage() {}

func (x *Bar_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_foobar_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bar_Nested.ProtoReflect.Descriptor instead.
func (*Bar_Nested) Descriptor() ([]byte, []int) {
	return file_foobar_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Bar_Nested) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Bar_Nested) GetIsNested() bool {
	if x != nil {
		return x.IsNested
	}
	return false
}

var File_foobar_proto protoreflect.FileDescriptor

var file_foobar_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x66, 0x6f, 0x6f, 0x62, 0x61, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x77, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7d, 0x0a, 0x03, 0x42, 0x61, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x2b, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x77, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x72, 0x2e, 0x4e,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x1a, 0x39, 0x0a, 0x06,
	0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x22, 0x97, 0x07, 0x0a, 0x0a, 0x46, 0x6f, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x79, 0x70,
	0x65, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x74, 0x79, 0x70,
	0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x79, 0x70, 0x65,
	0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x79, 0x70, 0x65,
	0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x79, 0x70, 0x65,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x74, 0x79, 0x70,
	0x65, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0b,
	0x74, 0x79, 0x70, 0x65, 0x46, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x74, 0x79, 0x70, 0x65, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74,
	0x79, 0x70, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x31, 0x0a, 0x0c, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x77, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x72, 0x52,
	0x0b, 0x74, 0x79, 0x70, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x74, 0x79, 0x70, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x2b, 0x0a, 0x09,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0e, 0x2e, 0x77, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x7a, 0x52,
	0x08, 0x74, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0f,
	0x52, 0x0c, 0x74, 0x79, 0x70, 0x65, 0x53, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x23,
	0x0a, 0x0d, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x10, 0x52, 0x0c, 0x74, 0x79, 0x70, 0x65, 0x53, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x36, 0x34, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x18, 0x10, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x53, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x18, 0x11, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x53,
	0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x50, 0x0a, 0x0f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x77, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x74, 0x79, 0x70, 0x65, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x12, 0x53, 0x0a, 0x10, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x13, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x77, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x78, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x74, 0x79,
	0x70, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x4d, 0x61, 0x70, 0x1a, 0x40, 0x0a, 0x12,
	0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x51,
	0x0a, 0x13, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x77, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x61, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x0d, 0x0a, 0x0b, 0x46, 0x6f, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xf6, 0x02, 0x0a, 0x0a, 0x42, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x30, 0x0a, 0x14, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x74,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x11,
	0x74, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x61,
	0x74, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x08, 0x52, 0x10, 0x74,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6c, 0x12,
	0x3c, 0x0a, 0x12, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x77, 0x6f,
	0x6d, 0x62, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x7a, 0x52, 0x10, 0x74, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x2e, 0x0a,
	0x13, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x11, 0x74, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x42, 0x0a,
	0x15, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x77,
	0x6f, 0x6d, 0x62, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x72, 0x52, 0x13, 0x74, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x72, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0e, 0x75, 0x69, 0x6e, 0x74, 0x33,
	0x32, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x0d, 0x0a, 0x0b, 0x42, 0x61, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x0a, 0x42, 0x61, 0x7a,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x03, 0x66, 0x6f, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x6f, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x03, 0x66,
	0x6f, 0x6f, 0x12, 0x29, 0x0a, 0x03, 0x62, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x77, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x03, 0x62, 0x61, 0x72, 0x12, 0x12, 0x0a,
	0x03, 0x62, 0x61, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x62, 0x61,
	0x7a, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0d, 0x0a, 0x0b,
	0x42, 0x61, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xad, 0x06, 0x0a, 0x0b,
	0x41, 0x46, 0x6f, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x11, 0x6d,
	0x61, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x77, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x46, 0x6f, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d,
	0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0f, 0x6d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x12, 0x51, 0x0a, 0x0f, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x6e, 0x74, 0x33,
	0x32, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x77, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x46, 0x6f, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x6d, 0x61, 0x70, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x0f, 0x6d, 0x61, 0x70, 0x5f, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x77, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x46, 0x6f,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x45, 0x6e, 0x75, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x6d, 0x61, 0x70,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x51, 0x0a, 0x0f, 0x6d, 0x61,
	0x70, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x77, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x46, 0x6f, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x61, 0x70, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d,
	0x6d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x57, 0x0a,
	0x11, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x77, 0x6f, 0x6d, 0x62, 0x61,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x46, 0x6f, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x6d, 0x61, 0x70, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x42, 0x0a, 0x14, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x40, 0x0a, 0x12, 0x4d, 0x61,
	0x70, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x42, 0x79, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x50, 0x0a, 0x12,
	0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x75, 0x6d, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x77, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x61, 0x7a, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x40,
	0x0a, 0x12, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x6f, 0x6c, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x59, 0x0a, 0x14, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x6f, 0x6d, 0x62,
	0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x7a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x0e, 0x0a, 0x0c, 0x41,
	0x46, 0x6f, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf6, 0x05, 0x0a,
	0x10, 0x57, 0x65, 0x6c, 0x6c, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x35, 0x0a, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0c, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x3f, 0x0a, 0x0c, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0b, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x3c, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3f,
	0x0a, 0x0c, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0b, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x39, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x57, 0x65, 0x6c, 0x6c, 0x4b, 0x6e, 0x6f,
	0x77, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0x0a, 0x12, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x30, 0x0a, 0x03, 0x62, 0x61, 0x7a, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x77, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x6c, 0x6c, 0x4b, 0x6e,
	0x6f, 0x77, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x03, 0x62,
	0x61, 0x7a, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x6f, 0x6f, 0x62, 0x61, 0x72, 0x22, 0x15, 0x0a, 0x13,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2a, 0x2d, 0x0a, 0x03, 0x42, 0x61, 0x7a, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x4f, 0x4f, 0x10, 0x01,
	0x12, 0x07, 0x0a, 0x03, 0x42, 0x41, 0x52, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x41, 0x5a,
	0x10, 0x03, 0x32, 0xc3, 0x03, 0x0a, 0x06, 0x46, 0x6f, 0x6f, 0x62, 0x61, 0x72, 0x12, 0x39, 0x0a,
	0x04, 0x41, 0x46, 0x6f, 0x6f, 0x12, 0x16, 0x2e, 0x77, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x46, 0x6f, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x77, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x46, 0x6f, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x03, 0x42, 0x61, 0x7a, 0x12,
	0x15, 0x2e, 0x77, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x7a, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x77, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x61, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x36, 0x0a, 0x03, 0x42, 0x61, 0x72, 0x12, 0x15, 0x2e, 0x77, 0x6f, 0x6d, 0x62, 0x61, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x77, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x03, 0x46, 0x6f, 0x6f, 0x12,
	0x15, 0x2e, 0x77, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x77, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x6f, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3c, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x17, 0x2e, 0x77, 0x6f, 0x6d, 0x62,
	0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x77, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48,
	0x0a, 0x09, 0x57, 0x65, 0x6c, 0x6c, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x12, 0x1b, 0x2e, 0x77, 0x6f,
	0x6d, 0x62, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x6c, 0x6c, 0x4b, 0x6e, 0x6f, 0x77,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x77, 0x6f, 0x6d, 0x62, 0x61,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x6c, 0x6c, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0b, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x12, 0x1d, 0x2e, 0x77, 0x6f, 0x6d, 0x62, 0x61, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x77, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x3b, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_foobar_proto_rawDescOnce sync.Once
	file_foobar_proto_rawDescData = file_foobar_proto_rawDesc
)

func file_foobar_proto_rawDescGZIP() []byte {
	file_foobar_proto_rawDescOnce.Do(func() {
		file_foobar_proto_rawDescData = protoimpl.X.CompressGZIP(file_foobar_proto_rawDescData)
	})
	return file_foobar_proto_rawDescData
}

var file_foobar_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_foobar_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_foobar_proto_goTypes = []interface{}{
	(Baz)(0),                       // 0: wombat.v1.Baz
	(*Bar)(nil),                    // 1: wombat.v1.Bar
	(*FooRequest)(nil),             // 2: wombat.v1.FooRequest
	(*FooResponse)(nil),            // 3: wombat.v1.FooResponse
	(*BarRequest)(nil),             // 4: wombat.v1.BarRequest
	(*BarResponse)(nil),            // 5: wombat.v1.BarResponse
	(*BazRequest)(nil),             // 6: wombat.v1.BazRequest
	(*BazResponse)(nil),            // 7: wombat.v1.BazResponse
	(*AFooRequest)(nil),            // 8: wombat.v1.AFooRequest
	(*AFooResponse)(nil),           // 9: wombat.v1.AFooResponse
	(*EmptyRequest)(nil),           // 10: wombat.v1.EmptyRequest
	(*EmptyResponse)(nil),          // 11: wombat.v1.EmptyResponse
	(*WellKnownRequest)(nil),       // 12: wombat.v1.WellKnownRequest
	(*WellKnownResponse)(nil),      // 13: wombat.v1.WellKnownResponse
	(*SingleOneofRequest)(nil),     // 14: wombat.v1.SingleOneofRequest
	(*SingleOneofResponse)(nil),    // 15: wombat.v1.SingleOneofResponse
	(*Bar_Nested)(nil),             // 16: wombat.v1.Bar.Nested
	nil,                            // 17: wombat.v1.FooRequest.TypeStringMapEntry
	nil,                            // 18: wombat.v1.FooRequest.TypeComplexMapEntry
	nil,                            // 19: wombat.v1.AFooRequest.MapStringStringEntry
	nil,                            // 20: wombat.v1.AFooRequest.MapInt32BytesEntry
	nil,                            // 21: wombat.v1.AFooRequest.MapStringEnumEntry
	nil,                            // 22: wombat.v1.AFooRequest.MapStringBoolEntry
	nil,                            // 23: wombat.v1.AFooRequest.MapInt32MessageEntry
	(*timestamppb.Timestamp)(nil),  // 24: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),    // 25: google.protobuf.Duration
	(*wrapperspb.DoubleValue)(nil), // 26: google.protobuf.DoubleValue
	(*wrapperspb.FloatValue)(nil),  // 27: google.protobuf.FloatValue
	(*wrapperspb.Int64Value)(nil),  // 28: google.protobuf.Int64Value
	(*wrapperspb.UInt64Value)(nil), // 29: google.protobuf.UInt64Value
	(*wrapperspb.Int32Value)(nil),  // 30: google.protobuf.Int32Value
	(*wrapperspb.UInt32Value)(nil), // 31: google.protobuf.UInt32Value
	(*wrapperspb.BoolValue)(nil),   // 32: google.protobuf.BoolValue
	(*wrapperspb.StringValue)(nil), // 33: google.protobuf.StringValue
	(*wrapperspb.BytesValue)(nil),  // 34: google.protobuf.BytesValue
	(*structpb.Struct)(nil),        // 35: google.protobuf.Struct
}
var file_foobar_proto_depIdxs = []int32{
	16, // 0: wombat.v1.Bar.names:type_name -> wombat.v1.Bar.Nested
	1,  // 1: wombat.v1.FooRequest.type_message:type_name -> wombat.v1.Bar
	0,  // 2: wombat.v1.FooRequest.type_enum:type_name -> wombat.v1.Baz
	17, // 3: wombat.v1.FooRequest.type_string_map:type_name -> wombat.v1.FooRequest.TypeStringMapEntry
	18, // 4: wombat.v1.FooRequest.type_complex_map:type_name -> wombat.v1.FooRequest.TypeComplexMapEntry
	0,  // 5: wombat.v1.BarRequest.type_repeated_enum:type_name -> wombat.v1.Baz
	1,  // 6: wombat.v1.BarRequest.type_repeated_message:type_name -> wombat.v1.Bar
	2,  // 7: wombat.v1.BazRequest.foo:type_name -> wombat.v1.FooRequest
	4,  // 8: wombat.v1.BazRequest.bar:type_name -> wombat.v1.BarRequest
	19, // 9: wombat.v1.AFooRequest.map_string_string:type_name -> wombat.v1.AFooRequest.MapStringStringEntry
	20, // 10: wombat.v1.AFooRequest.map_int32_bytes:type_name -> wombat.v1.AFooRequest.MapInt32BytesEntry
	21, // 11: wombat.v1.AFooRequest.map_string_enum:type_name -> wombat.v1.AFooRequest.MapStringEnumEntry
	22, // 12: wombat.v1.AFooRequest.map_string_bool:type_name -> wombat.v1.AFooRequest.MapStringBoolEntry
	23, // 13: wombat.v1.AFooRequest.map_int32_message:type_name -> wombat.v1.AFooRequest.MapInt32MessageEntry
	24, // 14: wombat.v1.WellKnownRequest.timestamp:type_name -> google.protobuf.Timestamp
	25, // 15: wombat.v1.WellKnownRequest.duration:type_name -> google.protobuf.Duration
	26, // 16: wombat.v1.WellKnownRequest.double_value:type_name -> google.protobuf.DoubleValue
	27, // 17: wombat.v1.WellKnownRequest.float_value:type_name -> google.protobuf.FloatValue
	28, // 18: wombat.v1.WellKnownRequest.int64_value:type_name -> google.protobuf.Int64Value
	29, // 19: wombat.v1.WellKnownRequest.uint64_value:type_name -> google.protobuf.UInt64Value
	30, // 20: wombat.v1.WellKnownRequest.int32_value:type_name -> google.protobuf.Int32Value
	31, // 21: wombat.v1.WellKnownRequest.uint32_value:type_name -> google.protobuf.UInt32Value
	32, // 22: wombat.v1.WellKnownRequest.bool_value:type_name -> google.protobuf.BoolValue
	33, // 23: wombat.v1.WellKnownRequest.string_value:type_name -> google.protobuf.StringValue
	34, // 24: wombat.v1.WellKnownRequest.bytes_value:type_name -> google.protobuf.BytesValue
	35, // 25: wombat.v1.WellKnownRequest.struct_value:type_name -> google.protobuf.Struct
	13, // 26: wombat.v1.SingleOneofRequest.baz:type_name -> wombat.v1.WellKnownResponse
	1,  // 27: wombat.v1.FooRequest.TypeComplexMapEntry.value:type_name -> wombat.v1.Bar
	0,  // 28: wombat.v1.AFooRequest.MapStringEnumEntry.value:type_name -> wombat.v1.Baz
	6,  // 29: wombat.v1.AFooRequest.MapInt32MessageEntry.value:type_name -> wombat.v1.BazRequest
	8,  // 30: wombat.v1.Foobar.AFoo:input_type -> wombat.v1.AFooRequest
	6,  // 31: wombat.v1.Foobar.Baz:input_type -> wombat.v1.BazRequest
	4,  // 32: wombat.v1.Foobar.Bar:input_type -> wombat.v1.BarRequest
	2,  // 33: wombat.v1.Foobar.Foo:input_type -> wombat.v1.FooRequest
	10, // 34: wombat.v1.Foobar.Empty:input_type -> wombat.v1.EmptyRequest
	12, // 35: wombat.v1.Foobar.WellKnown:input_type -> wombat.v1.WellKnownRequest
	14, // 36: wombat.v1.Foobar.SingleOneof:input_type -> wombat.v1.SingleOneofRequest
	9,  // 37: wombat.v1.Foobar.AFoo:output_type -> wombat.v1.AFooResponse
	7,  // 38: wombat.v1.Foobar.Baz:output_type -> wombat.v1.BazResponse
	5,  // 39: wombat.v1.Foobar.Bar:output_type -> wombat.v1.BarResponse
	3,  // 40: wombat.v1.Foobar.Foo:output_type -> wombat.v1.FooResponse
	11, // 41: wombat.v1.Foobar.Empty:output_type -> wombat.v1.EmptyResponse
	13, // 42: wombat.v1.Foobar.WellKnown:output_type -> wombat.v1.WellKnownResponse
	15, // 43: wombat.v1.Foobar.SingleOneof:output_type -> wombat.v1.SingleOneofResponse
	37, // [37:44] is the sub-list for method output_type
	30, // [30:37] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_foobar_proto_init() }
func file_foobar_proto_init() {
	if File_foobar_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_foobar_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foobar_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FooRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foobar_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FooResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foobar_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foobar_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foobar_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BazRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foobar_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BazResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foobar_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AFooRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foobar_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AFooResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foobar_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foobar_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foobar_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WellKnownRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foobar_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WellKnownResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foobar_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleOneofRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foobar_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleOneofResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foobar_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bar_Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_foobar_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*BazRequest_Foo)(nil),
		(*BazRequest_Bar)(nil),
		(*BazRequest_Baz)(nil),
	}
	file_foobar_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*SingleOneofRequest_Baz)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_foobar_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_foobar_proto_goTypes,
		DependencyIndexes: file_foobar_proto_depIdxs,
		EnumInfos:         file_foobar_proto_enumTypes,
		MessageInfos:      file_foobar_proto_msgTypes,
	}.Build()
	File_foobar_proto = out.File
	file_foobar_proto_rawDesc = nil
	file_foobar_proto_goTypes = nil
	file_foobar_proto_depIdxs = nil
}
